/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.3
 *
 * Copyright (C) 2009 Autodesk, Inc. and/or its licensors.
 * All Rights Reserved.
 * 
 * The coded instructions, statements, computer programs, and/or related material 
 * (collectively the "Data") in these files contain unpublished information 
 * proprietary to Autodesk, Inc. and/or its licensors, which is protected by 
 * Canada and United States of America federal copyright law and by international 
 * treaties. 
 * 
 * The Data may not be disclosed or distributed to third parties, in whole or in
 * part, without the prior written consent of Autodesk, Inc. ("Autodesk").
 * 
 * THE DATA IS PROVIDED "AS IS" AND WITHOUT WARRANTY.
 * ALL WARRANTIES ARE EXPRESSLY EXCLUDED AND DISCLAIMED. AUTODESK MAKES NO
 * WARRANTY OF ANY KIND WITH RESPECT TO THE DATA, EXPRESS, IMPLIED OR ARISING
 * BY CUSTOM OR TRADE USAGE, AND DISCLAIMS ANY IMPLIED WARRANTIES OF TITLE, 
 * NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR USE. 
 * WITHOUT LIMITING THE FOREGOING, AUTODESK DOES NOT WARRANT THAT THE OPERATION
 * OF THE DATA WILL BE UNINTERRUPTED OR ERROR FREE. 
 * 
 * IN NO EVENT SHALL AUTODESK, ITS AFFILIATES, PARENT COMPANIES, LICENSORS
 * OR SUPPLIERS ("AUTODESK GROUP") BE LIABLE FOR ANY LOSSES, DAMAGES OR EXPENSES
 * OF ANY KIND (INCLUDING WITHOUT LIMITATION PUNITIVE OR MULTIPLE DAMAGES OR OTHER
 * SPECIAL, DIRECT, INDIRECT, EXEMPLARY, INCIDENTAL, LOSS OF PROFITS, REVENUE
 * OR DATA, COST OF COVER OR CONSEQUENTIAL LOSSES OR DAMAGES OF ANY KIND),
 * HOWEVER CAUSED, AND REGARDLESS OF THE THEORY OF LIABILITY, WHETHER DERIVED
 * FROM CONTRACT, TORT (INCLUDING, BUT NOT LIMITED TO, NEGLIGENCE), OR OTHERWISE,
 * ARISING OUT OF OR RELATING TO THE DATA OR ITS USE OR ANY OTHER PERFORMANCE,
 * WHETHER OR NOT AUTODESK HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSS
 * OR DAMAGE. 
 */

#include "sipAPIfbx.h"


#line 4 "/var/www/html/lib/fbxpy/sip/fbxstatus.sip"
#include <fbxsdk.h>
#line 44 "/var/www/html/lib/fbxpy/build/Python27_ucs4_x64/sipfbxFbxDocument.cpp"


PyDoc_STRVAR(doc_FbxDocument_Create, "Create(FbxManager, str) -> FbxDocument\n"
    "Create(FbxObject, str) -> FbxDocument");

extern "C" {static PyObject *meth_FbxDocument_Create(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_Create(PyObject *, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxManager* a0;
        const char* a1;
        PyObject *a1Keep;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8A8", sipType_FbxManager, &a0, &a1Keep, &a1))
        {
             ::FbxDocument*sipRes;

            sipRes =  ::FbxDocument::Create(a0,a1);
            Py_DECREF(a1Keep);

            return sipConvertFromType(sipRes,sipType_FbxDocument,NULL);
        }
    }

    {
         ::FbxObject* a0;
        const char* a1;
        PyObject *a1Keep;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8A8", sipType_FbxObject, &a0, &a1Keep, &a1))
        {
             ::FbxDocument*sipRes;

            sipRes =  ::FbxDocument::Create(a0,a1);
            Py_DECREF(a1Keep);

            return sipConvertFromType(sipRes,sipType_FbxDocument,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_Create, doc_FbxDocument_Create);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetClassId, "GetClassId(self) -> FbxClassId");

extern "C" {static PyObject *meth_FbxDocument_GetClassId(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetClassId(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
             ::FbxClassId*sipRes;

            sipRes = new  ::FbxClassId((sipSelfWasArg ? sipCpp-> ::FbxDocument::GetClassId() : sipCpp->GetClassId()));

            return sipConvertFromNewType(sipRes,sipType_FbxClassId,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetClassId, doc_FbxDocument_GetClassId);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_Clear, "Clear(self)");

extern "C" {static PyObject *meth_FbxDocument_Clear(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_Clear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
            (sipSelfWasArg ? sipCpp-> ::FbxDocument::Clear() : sipCpp->Clear());

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_Clear, doc_FbxDocument_Clear);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_AddRootMember, "AddRootMember(self, FbxObject)");

extern "C" {static PyObject *meth_FbxDocument_AddRootMember(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_AddRootMember(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxObject* a0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxObject, &a0))
        {
            sipCpp->AddRootMember(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_AddRootMember, doc_FbxDocument_AddRootMember);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_RootRootRemoveMember, "RootRootRemoveMember(self, FbxObject)");

extern "C" {static PyObject *meth_FbxDocument_RootRootRemoveMember(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_RootRootRemoveMember(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxObject* a0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxObject, &a0))
        {
            sipCpp->RootRootRemoveMember(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_RootRootRemoveMember, doc_FbxDocument_RootRootRemoveMember);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_FindRootMember, "FindRootMember(self, FbxClassId, str) -> FbxObject");

extern "C" {static PyObject *meth_FbxDocument_FindRootMember(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_FindRootMember(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxClassId* a0;
        const char* a1;
        PyObject *a1Keep;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9A8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxClassId, &a0, &a1Keep, &a1))
        {
             ::FbxObject*sipRes = 0;

#line 34 "/var/www/html/lib/fbxpy/sip/fbxdocument.sip"
        sipRes = sipCpp->Roots.FindSrcObject(FbxCriteria::ObjectType(*a0), a1);
#line 229 "/var/www/html/lib/fbxpy/build/Python27_ucs4_x64/sipfbxFbxDocument.cpp"
            Py_DECREF(a1Keep);

            return sipConvertFromType(sipRes,sipType_FbxObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_FindRootMember, doc_FbxDocument_FindRootMember);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetRootMemberCount, "GetRootMemberCount(self) -> int\n"
    "GetRootMemberCount(self, FbxClassId) -> int\n"
    "GetRootMemberCount(self, FbxCriteria) -> int");

extern "C" {static PyObject *meth_FbxDocument_GetRootMemberCount(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetRootMemberCount(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
            int sipRes;

            sipRes = sipCpp->GetRootMemberCount();

            return SIPLong_FromLong(sipRes);
        }
    }

    {
         ::FbxClassId* a0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxClassId, &a0))
        {
            int sipRes = 0;

#line 47 "/var/www/html/lib/fbxpy/sip/fbxdocument.sip"
        sipRes = sipCpp->Roots.GetSrcObjectCount(FbxCriteria::ObjectType(*a0));
#line 278 "/var/www/html/lib/fbxpy/build/Python27_ucs4_x64/sipfbxFbxDocument.cpp"

            return SIPLong_FromLong(sipRes);
        }
    }

    {
         ::FbxCriteria* a0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxCriteria, &a0))
        {
            int sipRes;

            sipRes = sipCpp->GetRootMemberCount(*a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetRootMemberCount, doc_FbxDocument_GetRootMemberCount);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetRootMember, "GetRootMember(self, int = 0) -> FbxObject\n"
    "GetRootMember(self, FbxClassId, int = 0) -> FbxObject\n"
    "GetRootMember(self, FbxCriteria, int = 0) -> FbxObject");

extern "C" {static PyObject *meth_FbxDocument_GetRootMember(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetRootMember(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0 = 0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B|i", &sipSelf, sipType_FbxDocument, &sipCpp, &a0))
        {
             ::FbxObject*sipRes;

            sipRes = sipCpp->GetRootMember(a0);

            return sipConvertFromType(sipRes,sipType_FbxObject,NULL);
        }
    }

    {
         ::FbxClassId* a0;
        int a1 = 0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9|i", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxClassId, &a0, &a1))
        {
             ::FbxObject*sipRes = 0;

#line 68 "/var/www/html/lib/fbxpy/sip/fbxdocument.sip"
        sipRes = sipCpp->Roots.GetSrcObject(FbxCriteria::ObjectType(*a0), a1);
#line 342 "/var/www/html/lib/fbxpy/build/Python27_ucs4_x64/sipfbxFbxDocument.cpp"

            return sipConvertFromType(sipRes,sipType_FbxObject,NULL);
        }
    }

    {
         ::FbxCriteria* a0;
        int a1 = 0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9|i", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxCriteria, &a0, &a1))
        {
             ::FbxObject*sipRes;

            sipRes = sipCpp->GetRootMember(*a0,a1);

            return sipConvertFromType(sipRes,sipType_FbxObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetRootMember, doc_FbxDocument_GetRootMember);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_IsRootMember, "IsRootMember(self, FbxObject) -> bool");

extern "C" {static PyObject *meth_FbxDocument_IsRootMember(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_IsRootMember(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::FbxObject* a0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxObject, &a0))
        {
            bool sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::FbxDocument::IsRootMember(a0) : sipCpp->IsRootMember(a0));

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_IsRootMember, doc_FbxDocument_IsRootMember);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetDocumentInfo, "GetDocumentInfo(self) -> FbxDocumentInfo");

extern "C" {static PyObject *meth_FbxDocument_GetDocumentInfo(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetDocumentInfo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
             ::FbxDocumentInfo*sipRes;

            sipRes = sipCpp->GetDocumentInfo();

            return sipConvertFromType(sipRes,sipType_FbxDocumentInfo,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetDocumentInfo, doc_FbxDocument_GetDocumentInfo);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_SetDocumentInfo, "SetDocumentInfo(self, FbxDocumentInfo)");

extern "C" {static PyObject *meth_FbxDocument_SetDocumentInfo(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_SetDocumentInfo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxDocumentInfo* a0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxDocumentInfo, &a0))
        {
            sipCpp->SetDocumentInfo(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_SetDocumentInfo, doc_FbxDocument_SetDocumentInfo);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_SetPeripheral, "SetPeripheral(self, FbxPeripheral)");

extern "C" {static PyObject *meth_FbxDocument_SetPeripheral(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_SetPeripheral(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxPeripheral* a0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxPeripheral, &a0))
        {
            sipCpp->SetPeripheral(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_SetPeripheral, doc_FbxDocument_SetPeripheral);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetPeripheral, "GetPeripheral(self) -> FbxPeripheral");

extern "C" {static PyObject *meth_FbxDocument_GetPeripheral(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetPeripheral(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerivedClass((sipSimpleWrapper *)sipSelf));

    {
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
             ::FbxPeripheral*sipRes;

            sipRes = (sipSelfWasArg ? sipCpp-> ::FbxDocument::GetPeripheral() : sipCpp->GetPeripheral());

            return sipConvertFromType(sipRes,sipType_FbxPeripheral,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetPeripheral, doc_FbxDocument_GetPeripheral);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_UnloadContent, "UnloadContent(self, FbxStatus = None) -> int");

extern "C" {static PyObject *meth_FbxDocument_UnloadContent(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_UnloadContent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxStatus* a0 = 0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B|J8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxStatus, &a0))
        {
            int sipRes;

            sipRes = sipCpp->UnloadContent(a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_UnloadContent, doc_FbxDocument_UnloadContent);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_LoadContent, "LoadContent(self, FbxStatus = None) -> int");

extern "C" {static PyObject *meth_FbxDocument_LoadContent(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_LoadContent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxStatus* a0 = 0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B|J8", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxStatus, &a0))
        {
            int sipRes;

            sipRes = sipCpp->LoadContent(a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_LoadContent, doc_FbxDocument_LoadContent);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetReferencingDocuments, "GetReferencingDocuments(self, FbxDocumentArray) -> int");

extern "C" {static PyObject *meth_FbxDocument_GetReferencingDocuments(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetReferencingDocuments(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxDocumentArray* a0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxDocumentArray, &a0))
        {
            int sipRes;

            sipRes = sipCpp->GetReferencingDocuments(*a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetReferencingDocuments, doc_FbxDocument_GetReferencingDocuments);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetReferencingObjects, "GetReferencingObjects(self, FbxDocument, FbxObjectArray) -> int");

extern "C" {static PyObject *meth_FbxDocument_GetReferencingObjects(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetReferencingObjects(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::FbxDocument* a0;
         ::FbxObjectArray* a1;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxDocument, &a0, sipType_FbxObjectArray, &a1))
        {
            int sipRes;

            sipRes = sipCpp->GetReferencingObjects(a0,*a1);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetReferencingObjects, doc_FbxDocument_GetReferencingObjects);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetReferencedDocuments, "GetReferencedDocuments(self, FbxDocumentArray) -> int");

extern "C" {static PyObject *meth_FbxDocument_GetReferencedDocuments(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetReferencedDocuments(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxDocumentArray* a0;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxDocumentArray, &a0))
        {
            int sipRes;

            sipRes = sipCpp->GetReferencedDocuments(*a0);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetReferencedDocuments, doc_FbxDocument_GetReferencedDocuments);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetReferencedObjects, "GetReferencedObjects(self, FbxDocument, FbxObjectArray) -> int");

extern "C" {static PyObject *meth_FbxDocument_GetReferencedObjects(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetReferencedObjects(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::FbxDocument* a0;
         ::FbxObjectArray* a1;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxDocument, &a0, sipType_FbxObjectArray, &a1))
        {
            int sipRes;

            sipRes = sipCpp->GetReferencedObjects(a0,*a1);

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetReferencedObjects, doc_FbxDocument_GetReferencedObjects);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetPathToRootDocument, "GetPathToRootDocument(self) -> FbxString");

extern "C" {static PyObject *meth_FbxDocument_GetPathToRootDocument(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetPathToRootDocument(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
             ::FbxString*sipRes;

            sipRes = new  ::FbxString(sipCpp->GetPathToRootDocument());

            return sipConvertFromNewType(sipRes,sipType_FbxString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetPathToRootDocument, doc_FbxDocument_GetPathToRootDocument);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_GetDocumentPathToRootDocument, "GetDocumentPathToRootDocument(self, FbxDocumentArray, bool = True)");

extern "C" {static PyObject *meth_FbxDocument_GetDocumentPathToRootDocument(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_GetDocumentPathToRootDocument(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxDocumentArray* a0;
        bool a1 = 1;
        const  ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9|b", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxDocumentArray, &a0, &a1))
        {
            sipCpp->GetDocumentPathToRootDocument(*a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_GetDocumentPathToRootDocument, doc_FbxDocument_GetDocumentPathToRootDocument);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_IsARootDocument, "IsARootDocument(self) -> bool");

extern "C" {static PyObject *meth_FbxDocument_IsARootDocument(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_IsARootDocument(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
            bool sipRes;

            sipRes = sipCpp->IsARootDocument();

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_IsARootDocument, doc_FbxDocument_IsARootDocument);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_CreateAnimStack, "CreateAnimStack(self, str, FbxStatus = None) -> bool");

extern "C" {static PyObject *meth_FbxDocument_CreateAnimStack(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_CreateAnimStack(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const char* a0;
        PyObject *a0Keep;
         ::FbxStatus* a1 = 0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BA8|J8", &sipSelf, sipType_FbxDocument, &sipCpp, &a0Keep, &a0, sipType_FbxStatus, &a1))
        {
            bool sipRes;

            sipRes = sipCpp->CreateAnimStack(a0,a1);
            Py_DECREF(a0Keep);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_CreateAnimStack, doc_FbxDocument_CreateAnimStack);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_RemoveAnimStack, "RemoveAnimStack(self, str) -> bool");

extern "C" {static PyObject *meth_FbxDocument_RemoveAnimStack(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_RemoveAnimStack(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const char* a0;
        PyObject *a0Keep;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BA8", &sipSelf, sipType_FbxDocument, &sipCpp, &a0Keep, &a0))
        {
            bool sipRes;

            sipRes = sipCpp->RemoveAnimStack(a0);
            Py_DECREF(a0Keep);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_RemoveAnimStack, doc_FbxDocument_RemoveAnimStack);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_FillAnimStackNameArray, "FillAnimStackNameArray(self, FbxStringArray)");

extern "C" {static PyObject *meth_FbxDocument_FillAnimStackNameArray(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_FillAnimStackNameArray(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxStringArray* a0;
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_FbxDocument, &sipCpp, sipType_FbxStringArray, &a0))
        {
            sipCpp->FillAnimStackNameArray(*a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_FillAnimStackNameArray, doc_FbxDocument_FillAnimStackNameArray);

    return NULL;
}


PyDoc_STRVAR(doc_FbxDocument_ConnectVideos, "ConnectVideos(self)");

extern "C" {static PyObject *meth_FbxDocument_ConnectVideos(PyObject *, PyObject *);}
static PyObject *meth_FbxDocument_ConnectVideos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
         ::FbxDocument *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_FbxDocument, &sipCpp))
        {
            sipCpp->ConnectVideos();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_FbxDocument, sipName_ConnectVideos, doc_FbxDocument_ConnectVideos);

    return NULL;
}


extern "C" {static PyObject *slot_FbxDocument___ne__(PyObject *,PyObject *);}
static PyObject *slot_FbxDocument___ne__(PyObject *sipSelf,PyObject *sipArg)
{
     ::FbxDocument *sipCpp = reinterpret_cast< ::FbxDocument *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_FbxDocument));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const  ::FbxDocument* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_FbxDocument, &a0))
        {
            bool sipRes;

            sipRes = !sipCpp-> ::FbxDocument::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_fbx, ne_slot, sipType_FbxDocument, sipSelf, sipArg);
}


extern "C" {static PyObject *slot_FbxDocument___eq__(PyObject *,PyObject *);}
static PyObject *slot_FbxDocument___eq__(PyObject *sipSelf,PyObject *sipArg)
{
     ::FbxDocument *sipCpp = reinterpret_cast< ::FbxDocument *>(sipGetCppPtr((sipSimpleWrapper *)sipSelf,sipType_FbxDocument));

    if (!sipCpp)
        return 0;

    PyObject *sipParseErr = NULL;

    {
        const  ::FbxDocument* a0;

        if (sipParseArgs(&sipParseErr, sipArg, "1J9", sipType_FbxDocument, &a0))
        {
            bool sipRes;

            sipRes = sipCpp-> ::FbxDocument::operator==(*a0);

            return PyBool_FromLong(sipRes);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    return sipPySlotExtend(&sipModuleAPI_fbx, eq_slot, sipType_FbxDocument, sipSelf, sipArg);
}


/* Cast a pointer to a type somewhere in its inheritance hierarchy. */
extern "C" {static void *cast_FbxDocument(void *, const sipTypeDef *);}
static void *cast_FbxDocument(void *sipCppV, const sipTypeDef *targetType)
{
     ::FbxDocument *sipCpp = reinterpret_cast< ::FbxDocument *>(sipCppV);

    if (targetType == sipType_FbxCollection)
        return static_cast< ::FbxCollection *>(sipCpp);

    if (targetType == sipType_FbxObject)
        return static_cast< ::FbxObject *>(sipCpp);

    return sipCppV;
}


/* Call the instance's destructor. */
extern "C" {static void release_FbxDocument(void *, int);}
static void release_FbxDocument(void *, int)
{
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_FbxDocument[] = {{100, 255, 1}};


/* Define this type's Python slots. */
static sipPySlotDef slots_FbxDocument[] = {
    {(void *)slot_FbxDocument___ne__, ne_slot},
    {(void *)slot_FbxDocument___eq__, eq_slot},
    {0, (sipPySlotType)0}
};


static PyMethodDef methods_FbxDocument[] = {
    {SIP_MLNAME_CAST(sipName_AddRootMember), meth_FbxDocument_AddRootMember, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_AddRootMember)},
    {SIP_MLNAME_CAST(sipName_Clear), meth_FbxDocument_Clear, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_Clear)},
    {SIP_MLNAME_CAST(sipName_ConnectVideos), meth_FbxDocument_ConnectVideos, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_ConnectVideos)},
    {SIP_MLNAME_CAST(sipName_Create), meth_FbxDocument_Create, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_Create)},
    {SIP_MLNAME_CAST(sipName_CreateAnimStack), meth_FbxDocument_CreateAnimStack, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_CreateAnimStack)},
    {SIP_MLNAME_CAST(sipName_FillAnimStackNameArray), meth_FbxDocument_FillAnimStackNameArray, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_FillAnimStackNameArray)},
    {SIP_MLNAME_CAST(sipName_FindRootMember), meth_FbxDocument_FindRootMember, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_FindRootMember)},
    {SIP_MLNAME_CAST(sipName_GetClassId), meth_FbxDocument_GetClassId, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetClassId)},
    {SIP_MLNAME_CAST(sipName_GetDocumentInfo), meth_FbxDocument_GetDocumentInfo, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetDocumentInfo)},
    {SIP_MLNAME_CAST(sipName_GetDocumentPathToRootDocument), meth_FbxDocument_GetDocumentPathToRootDocument, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetDocumentPathToRootDocument)},
    {SIP_MLNAME_CAST(sipName_GetPathToRootDocument), meth_FbxDocument_GetPathToRootDocument, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetPathToRootDocument)},
    {SIP_MLNAME_CAST(sipName_GetPeripheral), meth_FbxDocument_GetPeripheral, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetPeripheral)},
    {SIP_MLNAME_CAST(sipName_GetReferencedDocuments), meth_FbxDocument_GetReferencedDocuments, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetReferencedDocuments)},
    {SIP_MLNAME_CAST(sipName_GetReferencedObjects), meth_FbxDocument_GetReferencedObjects, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetReferencedObjects)},
    {SIP_MLNAME_CAST(sipName_GetReferencingDocuments), meth_FbxDocument_GetReferencingDocuments, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetReferencingDocuments)},
    {SIP_MLNAME_CAST(sipName_GetReferencingObjects), meth_FbxDocument_GetReferencingObjects, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetReferencingObjects)},
    {SIP_MLNAME_CAST(sipName_GetRootMember), meth_FbxDocument_GetRootMember, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetRootMember)},
    {SIP_MLNAME_CAST(sipName_GetRootMemberCount), meth_FbxDocument_GetRootMemberCount, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_GetRootMemberCount)},
    {SIP_MLNAME_CAST(sipName_IsARootDocument), meth_FbxDocument_IsARootDocument, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_IsARootDocument)},
    {SIP_MLNAME_CAST(sipName_IsRootMember), meth_FbxDocument_IsRootMember, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_IsRootMember)},
    {SIP_MLNAME_CAST(sipName_LoadContent), meth_FbxDocument_LoadContent, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_LoadContent)},
    {SIP_MLNAME_CAST(sipName_RemoveAnimStack), meth_FbxDocument_RemoveAnimStack, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_RemoveAnimStack)},
    {SIP_MLNAME_CAST(sipName_RootRootRemoveMember), meth_FbxDocument_RootRootRemoveMember, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_RootRootRemoveMember)},
    {SIP_MLNAME_CAST(sipName_SetDocumentInfo), meth_FbxDocument_SetDocumentInfo, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_SetDocumentInfo)},
    {SIP_MLNAME_CAST(sipName_SetPeripheral), meth_FbxDocument_SetPeripheral, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_SetPeripheral)},
    {SIP_MLNAME_CAST(sipName_UnloadContent), meth_FbxDocument_UnloadContent, METH_VARARGS, SIP_MLDOC_CAST(doc_FbxDocument_UnloadContent)}
};


extern "C" {static PyObject *varget_FbxDocument_ActiveAnimStackName(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxDocument_ActiveAnimStackName(void *sipSelf, PyObject *, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxDocument *sipCpp = reinterpret_cast< ::FbxDocument *>(sipSelf);

    sipVal = &sipCpp->ActiveAnimStackName;

    return sipConvertFromType(sipVal, sipType_FbxPropertyString, NULL);
}


extern "C" {static int varset_FbxDocument_ActiveAnimStackName(void *, PyObject *, PyObject *);}
static int varset_FbxDocument_ActiveAnimStackName(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyString*sipVal;
     ::FbxDocument *sipCpp = reinterpret_cast< ::FbxDocument *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::FbxPropertyString *>(sipForceConvertToType(sipPy,sipType_FbxPropertyString,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->ActiveAnimStackName = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxDocument_ClassId(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxDocument_ClassId(void *, PyObject *, PyObject *)
{
     ::FbxClassId*sipVal;

    sipVal = & ::FbxDocument::ClassId;

    return sipConvertFromType(sipVal, sipType_FbxClassId, NULL);
}


extern "C" {static int varset_FbxDocument_ClassId(void *, PyObject *, PyObject *);}
static int varset_FbxDocument_ClassId(void *, PyObject *sipPy, PyObject *)
{
     ::FbxClassId*sipVal;
    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::FbxClassId *>(sipForceConvertToType(sipPy,sipType_FbxClassId,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

     ::FbxDocument::ClassId = *sipVal;

    return 0;
}


extern "C" {static PyObject *varget_FbxDocument_Roots(void *, PyObject *, PyObject *);}
static PyObject *varget_FbxDocument_Roots(void *sipSelf, PyObject *, PyObject *)
{
     ::FbxPropertyFbxReference*sipVal;
     ::FbxDocument *sipCpp = reinterpret_cast< ::FbxDocument *>(sipSelf);

    sipVal = &sipCpp->Roots;

    return sipConvertFromType(sipVal, sipType_FbxPropertyFbxReference, NULL);
}


extern "C" {static int varset_FbxDocument_Roots(void *, PyObject *, PyObject *);}
static int varset_FbxDocument_Roots(void *sipSelf, PyObject *sipPy, PyObject *)
{
     ::FbxPropertyFbxReference*sipVal;
     ::FbxDocument *sipCpp = reinterpret_cast< ::FbxDocument *>(sipSelf);

    int sipIsErr = 0;

    sipVal = reinterpret_cast< ::FbxPropertyFbxReference *>(sipForceConvertToType(sipPy,sipType_FbxPropertyFbxReference,NULL,SIP_NOT_NONE,NULL,&sipIsErr));

    if (sipIsErr)
        return -1;

    sipCpp->Roots = *sipVal;

    return 0;
}

sipVariableDef variables_FbxDocument[] = {
    {InstanceVariable, sipName_ActiveAnimStackName, (PyMethodDef *)varget_FbxDocument_ActiveAnimStackName, (PyMethodDef *)varset_FbxDocument_ActiveAnimStackName, NULL, NULL},
    {ClassVariable, sipName_ClassId, (PyMethodDef *)varget_FbxDocument_ClassId, (PyMethodDef *)varset_FbxDocument_ClassId, NULL, NULL},
    {InstanceVariable, sipName_Roots, (PyMethodDef *)varget_FbxDocument_Roots, (PyMethodDef *)varset_FbxDocument_Roots, NULL, NULL},
};


sipClassTypeDef sipTypeDef_fbx_FbxDocument = {
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_FbxDocument,
        {0},
        0
    },
    {
        sipNameNr_FbxDocument,
        {0, 0, 1},
        26, methods_FbxDocument,
        0, 0,
        3, variables_FbxDocument,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    supers_FbxDocument,
    slots_FbxDocument,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    release_FbxDocument,
    cast_FbxDocument,
    0,
    0,
    0,
    0,
    0,
    0
};
